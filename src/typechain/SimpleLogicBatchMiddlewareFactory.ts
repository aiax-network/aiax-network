/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimpleLogicBatchMiddleware } from "./SimpleLogicBatchMiddleware";

export class SimpleLogicBatchMiddlewareFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SimpleLogicBatchMiddleware> {
    return super.deploy(overrides || {}) as Promise<SimpleLogicBatchMiddleware>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleLogicBatchMiddleware {
    return super.attach(address) as SimpleLogicBatchMiddleware;
  }
  connect(signer: Signer): SimpleLogicBatchMiddlewareFactory {
    return super.connect(signer) as SimpleLogicBatchMiddlewareFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLogicBatchMiddleware {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLogicBatchMiddleware;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_logicContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_returnData",
        type: "bytes",
      },
    ],
    name: "LogicCallEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_payloads",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_logicContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "logicBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b610a89806100796000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636f1de7e714610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008c575b600080fd5b61006461005f3660046106f4565b61009f565b005b610064610204565b610076610283565b6040516100839190610840565b60405180910390f35b61006461009a3660046106d9565b610292565b6100a7610348565b6000546001600160a01b039081169116146100dd5760405162461bcd60e51b81526004016100d490610926565b60405180910390fd5b610115604051806040016040528060158152602001746e756d626572206f66205f616d6f756e74733a257360581b815250855161034c565b60005b84518110156101fd576101646040518060400160405280600e81526020016d5472616e73666572696e6720257360901b81525086838151811061015757fe5b602002602001015161034c565b6101958386838151811061017457fe5b6020026020010151846001600160a01b03166103959092919063ffffffff16565b60606101b4848684815181106101a757fe5b60200260200101516103f0565b90507f082c66b5463457c7cbafaf74246bc930c6a4a72e773dba5a016311f65ec3ee8a83856001846040516101ec9493929190610854565b60405180910390a150600101610118565b5050505050565b61020c610348565b6000546001600160a01b039081169116146102395760405162461bcd60e51b81526004016100d490610926565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61029a610348565b6000546001600160a01b039081169116146102c75760405162461bcd60e51b81526004016100d490610926565b6001600160a01b0381166102ed5760405162461bcd60e51b81526004016100d4906108e0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b61039182826040516024016103629291906108be565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261043b565b5050565b6103eb8363a9059cbb60e01b84846040516024016103b4929190610892565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261045c565b505050565b606061043283836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506104eb565b90505b92915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60606104b1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104eb9092919063ffffffff16565b8051909150156103eb57808060200190518101906104cf91906107d1565b6103eb5760405162461bcd60e51b81526004016100d490610992565b60606104fa8484600085610502565b949350505050565b606061050d856105c6565b6105295760405162461bcd60e51b81526004016100d49061095b565b60006060866001600160a01b031685876040516105469190610824565b60006040518083038185875af1925050503d8060008114610583576040519150601f19603f3d011682016040523d82523d6000602084013e610588565b606091505b5091509150811561059c5791506104fa9050565b8051156105ac5780518082602001fd5b8360405162461bcd60e51b81526004016100d491906108ab565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906104fa575050151592915050565b80356001600160a01b038116811461043557600080fd5b6000601f8381840112610627578182fd5b823561063a61063582610a03565b6109dc565b818152925060208084019085810160005b848110156106cd578135880189603f82011261066657600080fd5b8381013567ffffffffffffffff81111561067f57600080fd5b610690818901601f191686016109dc565b81815260408c818486010111156106a657600080fd5b8281850188840137506000918101860191909152855250928201929082019060010161064b565b50505050505092915050565b6000602082840312156106ea578081fd5b61043283836105ff565b60008060008060808587031215610709578283fd5b843567ffffffffffffffff80821115610720578485fd5b81870188601f820112610731578586fd5b8035925061074161063584610a03565b80848252602080830192508084018c82838902870101111561076157898afd5b8994505b86851015610783578035845260019490940193928101928101610765565b50909850890135935050508082111561079a578485fd5b506107a787828801610616565b9350506107b786604087016105ff565b91506107c686606087016105ff565b905092959194509250565b6000602082840312156107e2578081fd5b815180151581146107f1578182fd5b9392505050565b60008151808452610810816020860160208601610a23565b601f01601f19169290920160200192915050565b60008251610836818460208701610a23565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038581168252841660208201528215156040820152608060608201819052600090610888908301846107f8565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b60006020825261043260208301846107f8565b6000604082526108d160408301856107f8565b90508260208301529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60405181810167ffffffffffffffff811182821017156109fb57600080fd5b604052919050565b600067ffffffffffffffff821115610a19578081fd5b5060209081020190565b60005b83811015610a3e578181015183820152602001610a26565b83811115610a4d576000848401525b5050505056fea264697066735822122061619f7a4787b5d7875243667861bb433acb2988268a1ce708c302b4050fc08264736f6c63430006060033";
