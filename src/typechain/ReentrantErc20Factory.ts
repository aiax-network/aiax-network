/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ReentrantErc20 } from "./ReentrantErc20";

export class ReentrantErc20Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _gravityAddress: string,
    overrides?: Overrides
  ): Promise<ReentrantErc20> {
    return super.deploy(
      _gravityAddress,
      overrides || {}
    ) as Promise<ReentrantErc20>;
  }
  getDeployTransaction(
    _gravityAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_gravityAddress, overrides || {});
  }
  attach(address: string): ReentrantErc20 {
    return super.attach(address) as ReentrantErc20;
  }
  connect(signer: Signer): ReentrantErc20Factory {
    return super.connect(signer) as ReentrantErc20Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantErc20 {
    return new Contract(address, _abi, signerOrProvider) as ReentrantErc20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gravityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161052b38038061052b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61049a806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9059cbb14610030575b600080fd5b61004361003e3660046101ae565b610059565b6040516100509190610459565b60405180910390f35b60408051600080825260208201818152828401828152606084018381526080850190955291939091908461008b610156565b50604080516101208101825284815260208082018890528183018690526060820188905260006080830181905260a0830186905260c0830185905260e0830181905261010083018590528054845191825291810193849052630612364160e11b90935290916001600160a01b0390911690630c246c8290610118908990889087908b8089602484016103a1565b600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b5050505050505050505092915050565b6040518061012001604052806060815260200160608152602001606081526020016060815260200160006001600160a01b03168152602001606081526020016000815260200160008019168152602001600081525090565b600080604083850312156101c0578182fd5b82356001600160a01b03811681146101d6578283fd5b946020939093013593505050565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156102295781516001600160a01b031687529582019590820190600101610204565b509495945050505050565b6000815180845260208085019450808401835b8381101561022957815187529582019590820190600101610247565b6000815180845260208085019450808401835b8381101561022957815160ff1687529582019590820190600101610276565b60008151808452815b818110156102ba5760208185018101518683018201520161029e565b818111156102cb5782602083870101525b50601f01601f19169290920160200192915050565b600061012082518185526102f682860182610234565b60208501519250858103602087015261030f81846101f1565b91505060408401519150848103604086015261032b8183610234565b60608501519250858103606087015261034481846101f1565b9150506080840151915061035b60808601836101e4565b60a0840151915084810360a08601526103748183610295565b60c085015160c087015260e085015160e08701526101009250828501518387015280935050505092915050565b60e08082528851908201819052600090602090610100840190828c01845b828110156103e2576103d28483516101e4565b92840192908401906001016103bf565b505050838103828501526103f6818b610234565b91505087604084015282810360608401526104118188610263565b83810360808501526104238188610234565b91505082810360a08401526104388186610234565b83810360c085015261044a81866102e0565b9b9a5050505050505050505050565b90151581526020019056fea26469706673582212207675072cf5f31862a9e60837401c77289f7843ce8efc825abc2e32ed58cf455564736f6c63430006060033";
