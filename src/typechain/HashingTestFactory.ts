/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HashingTest } from "./HashingTest";

export class HashingTestFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HashingTest> {
    return super.deploy(overrides || {}) as Promise<HashingTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashingTest {
    return super.attach(address) as HashingTest;
  }
  connect(signer: Signer): HashingTestFactory {
    return super.connect(signer) as HashingTestFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashingTest {
    return new Contract(address, _abi, signerOrProvider) as HashingTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "ConcatHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "ConcatHash2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_gravityId",
        type: "bytes32",
      },
    ],
    name: "IterativeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
    ],
    name: "JustSaveEverything",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_valsetNonce",
        type: "uint256",
      },
    ],
    name: "JustSaveEverythingAgain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCheckpoint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state_nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "state_powers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "state_validators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b7d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715dff7e11610066578063715dff7e1461035257806374df6ae414610477578063884403e214610352578063ccf0e74c1461059f578063d32e81a5146105a757610093565b80630caff28b146100985780632afbb62e146101c25780632b939281146101fb5780636071cbd91461022a575b600080fd5b6101c0600480360360808110156100ae57600080fd5b810190602081018135600160201b8111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460208302840111600160201b831117156100fb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561014a57600080fd5b82018360208201111561015c57600080fd5b803590602001918460208302840111600160201b8311171561017d57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356105af565b005b6101df600480360360208110156101d857600080fd5b503561069a565b604080516001600160a01b039092168252519081900360200190f35b6102186004803603602081101561021157600080fd5b50356106c1565b60408051918252519081900360200190f35b6101c06004803603608081101561024057600080fd5b810190602081018135600160201b81111561025a57600080fd5b82018360208201111561026c57600080fd5b803590602001918460208302840111600160201b8311171561028d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102dc57600080fd5b8201836020820111156102ee57600080fd5b803590602001918460208302840111600160201b8311171561030f57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356106df565b6101c06004803603606081101561036857600080fd5b810190602081018135600160201b81111561038257600080fd5b82018360208201111561039457600080fd5b803590602001918460208302840111600160201b831117156103b557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561040457600080fd5b82018360208201111561041657600080fd5b803590602001918460208302840111600160201b8311171561043757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061082b915050565b6101c06004803603608081101561048d57600080fd5b810190602081018135600160201b8111156104a757600080fd5b8201836020820111156104b957600080fd5b803590602001918460208302840111600160201b831117156104da57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561052957600080fd5b82018360208201111561053b57600080fd5b803590602001918460208302840111600160201b8311171561055c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561085a565b6102186109aa565b6102186109b0565b60006918da1958dadc1bda5b9d60b21b60001b905060008282858888604051602001808681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561062457818101518382015260200161060c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561066357818101518382015260200161064b565b5050505090500197505050505050505060405160208183030381529060405280519060200120905080600081905550505050505050565b600181815481106106a757fe5b6000918252602090912001546001600160a01b0316905081565b600281815481106106ce57fe5b600091825260209091200154905081565b6040805160208082018490526918da1958dadc1bda5b9d60b21b8284018190526060808401879052845180850390910181526080840190945283519382019390932060a08301828152885160c0850152885191936000938a93839260e001918581019102808383895b83811015610760578181015183820152602001610748565b50505050905001925050506040516020818303038152906040528051906020012090506000866040516020018080602001828103825283818151815260200191508051906020019060200280838360005b838110156107c95781810151838201526020016107b1565b50506040805193909501838103601f1901845280865283516020948501208482019c909c528086019a909a5250506060808901999099528251808903909901895260809097019091525050845194909301939093206000555050505050505050565b825161083e906001906020860190610a17565b508151610852906002906020850190610a7c565b506003555050565b6040805160208082018490526918da1958dadc1bda5b9d60b21b8284018190526060808401879052845180850390910181526080909301909352815191012060005b865181101561099f578015610913578560018203815181106108ba57fe5b60200260200101518682815181106108ce57fe5b602002602001015111156109135760405162461bcd60e51b8152600401808060200182810382526043815260200180610b056043913960600191505060405180910390fd5b8187828151811061092057fe5b602002602001015187838151811061093457fe5b602002602001015160405160200180848152602001836001600160a01b03166001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012091506109986001826109b690919063ffffffff16565b905061089c565b506000555050505050565b60035481565b60005481565b600082820183811015610a10576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054828255906000526020600020908101928215610a6c579160200282015b82811115610a6c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610a37565b50610a78929150610ac3565b5090565b828054828255906000526020600020908101928215610ab7579160200282015b82811115610ab7578251825591602001919060010190610a9c565b50610a78929150610aea565b610ae791905b80821115610a785780546001600160a01b0319168155600101610ac9565b90565b610ae791905b80821115610a785760008155600101610af056fe56616c696461746f7220706f776572206d757374206e6f7420626520686967686572207468616e2070726576696f75732076616c696461746f7220696e206261746368a264697066735822122096c786ccc004da4a565b59794018c5d1d640d5b185dcbd7b8c8459ac1db1f87064736f6c63430006060033";
